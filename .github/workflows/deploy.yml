name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Create config.js from template with secret API key
      run: |
        # Copy config.example.js as template and replace the API key
        cp config.example.js config.js
        sed -i "s/'your_gemini_api_key_here'/'${{ secrets.GEMINI_API_KEY }}'/g" config.js
        echo "Generated config.js with updated prompts:"
        head -5 config.js
        
    - name: Prepare deployment directory
      run: |
        mkdir -p _site
        # Copy all files except .git and .github
        rsync -av --exclude='.git' --exclude='.github' --exclude='_site' . _site/
        echo "Files in _site directory:"
        ls -la _site/
        echo "Checking config.js in _site:"
        ls -la _site/config.js
        head -3 _site/config.js
        
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4